version: '3.5'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: docker-next
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules

  django:
    build: 
      context: ./backend/CRm
      dockerfile: Dockerfile
    container_name: django
    command: python ./backend/CRm/manage.py runserver 0.0.0.0:8000 
    volumes:
      - .:/the/workdir/path 
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,[::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  celery:
    build: 
      context: ./backend/CRm
      dockerfile: Dockerfile
    command: celery -A CRm worker -l INFO
    volumes:
      - ./backend/CRm:/the/workdir/path 
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,[::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - django
      - redis

  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_DB=Crm
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/

  redis:
    image: "redis:alpine"

  celery-beat:
    build: 
      context: ./backend/CRm
      dockerfile: Dockerfile
    command: celery -A CRm beat -l info
    volumes:
      - ./backend/CRm:/the/workdir/path 
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,[::1]
    depends_on:
      - redis  
        
  flower:
    image: mher/flower:0.9.7
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    expose:
      - 5555
    depends_on:
      - redis
      - db

volumes:
  pgdata:
